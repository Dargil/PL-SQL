--TRIGGER PARA CONTROLAR LA TABLA FACTURAS
create or replace TRIGGER T_FACTURAS 
BEFORE DELETE OR INSERT OR UPDATE ON FACTURAS
DECLARE
OPERACION CHAR(1);
BEGIN
  IF INSERTING THEN
     OPERACION:='I';
  END IF;
IF UPDATING THEN
     OPERACION:='U';
  END IF;
  IF DELETING THEN
     OPERACION:='D';
  END IF;
  INSERT INTO CONTROL_LOG VALUES (USER,SYSDATE,'FACTURAS',OPERACION);
END;

/


--TRIGGER PARA CONTROLAR LA TABLA LINEAS_FACTURA
create or replace TRIGGER T_LINEAS_FACTURAS
BEFORE DELETE OR INSERT OR UPDATE ON LINEAS_FACTURA
DECLARE
OPERACION CHAR(1);
BEGIN
  IF INSERTING THEN
     OPERACION:='I';
  END IF;
IF UPDATING THEN
     OPERACION:='U';
  END IF;
  IF DELETING THEN
     OPERACION:='D';
  END IF;
  INSERT INTO CONTROL_LOG VALUES (USER,SYSDATE,'LINEAS_FACTURA',OPERACION);
END;
/


--TRIGGER PARA CONTROLAR LA COLUMNA TOTAL_VENDIDOS DE LA TABLA PRODUCTOS
create or replace TRIGGER T_LINEAS_FACTURAS_PRECIO
AFTER DELETE OR INSERT OR UPDATE ON LINEAS_FACTURA
FOR EACH ROW
DECLARE
  --- VARIABLE PARA CONTROLA REL UPDATE
   TOTAL_CAMBIO NUMBER:=0;
BEGIN
  IF INSERTING THEN
     UPDATE PRODUCTOS SET TOTAL_VENDIDOS=TOTAL_VENDIDOS+(:NEW.PVP*:NEW.UNIDADES)
     WHERE COD_PRODUCTO=:NEW.COD_PRODUCTO;
  END IF;
IF UPDATING THEN
    TOTAL_CAMBIO:=(:OLD.PVP*:OLD.UNIDADES)-(:NEW.PVP*:NEW.UNIDADES);
    UPDATE PRODUCTOS SET TOTAL_VENDIDOS=TOTAL_VENDIDOS+TOTAL_CAMBIO
    WHERE COD_PRODUCTO=:NEW.COD_PRODUCTO;
  END IF;
  IF DELETING THEN
    UPDATE PRODUCTOS SET TOTAL_VENDIDOS=TOTAL_VENDIDOS-(:NEW.PVP*:NEW.UNIDADES)
     WHERE COD_PRODUCTO=:NEW.COD_PRODUCTO;
  END IF;
END;